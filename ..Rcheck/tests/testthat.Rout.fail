
R version 4.4.0 (2024-04-24 ucrt) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # This file is part of the standard setup for testthat.
> # It is recommended that you do not modify it.
> #
> # Where should you do additional test configuration?
> # Learn more about the roles of various files in:
> # * https://r-pkgs.org/tests.html
> # * https://testthat.r-lib.org/reference/test_package.html#special-files
> 
> library(testthat)
Warning message:
package 'testthat' was built under R version 4.4.3 
> library(MSCRUtils)
> 
> test_check("MSCRUtils") 
Directory created: /invalid/path 
Excel file saved to: /invalid/path/test.xlsx 
[ FAIL 20 | WARN 0 | SKIP 0 | PASS 14 ]

══ Failed tests ════════════════════════════════════════════════════════════════
── Failure ('test-data-export.R:10:3'): export_to_excel 基本功能测试 ───────────
`export_to_excel(test_data, test_file)` produced output.
── Error ('test-data-export.R:19:3'): export_to_excel 参数验证测试 ─────────────
Error in `export_to_excel()`: Parameter 'data' is required and cannot be empty
Backtrace:
    ▆
 1. ├─testthat::expect_error(export_to_excel(), "参数 'data' 是必需的") at test-data-export.R:19:3
 2. │ └─testthat:::expect_condition_matching(...)
 3. │   └─testthat:::quasi_capture(...)
 4. │     ├─testthat (local) .capture(...)
 5. │     │ └─base::withCallingHandlers(...)
 6. │     └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
 7. └─MSCRUtils::export_to_excel()
── Error ('test-data-export.R:41:3'): export_to_excel 样式参数验证测试 ─────────
Error in `export_to_excel(mtcars, "test.xlsx", header_style = "invalid")`: Unsupported header_style: invalid. Valid options: default, bold, colored, minimal
Backtrace:
    ▆
 1. ├─testthat::expect_error(...) at test-data-export.R:41:3
 2. │ └─testthat:::expect_condition_matching(...)
 3. │   └─testthat:::quasi_capture(...)
 4. │     ├─testthat (local) .capture(...)
 5. │     │ └─base::withCallingHandlers(...)
 6. │     └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
 7. └─MSCRUtils::export_to_excel(mtcars, "test.xlsx", header_style = "invalid")
── Failure ('test-data-export.R:68:5'): export_to_excel 不同样式组合测试 ───────
`export_to_excel(test_data, test_file, header_style = style)` produced output.
── Failure ('test-data-export.R:68:5'): export_to_excel 不同样式组合测试 ───────
`export_to_excel(test_data, test_file, header_style = style)` produced output.
── Failure ('test-data-export.R:68:5'): export_to_excel 不同样式组合测试 ───────
`export_to_excel(test_data, test_file, header_style = style)` produced output.
── Failure ('test-data-export.R:68:5'): export_to_excel 不同样式组合测试 ───────
`export_to_excel(test_data, test_file, header_style = style)` produced output.
── Failure ('test-data-export.R:74:5'): export_to_excel 不同样式组合测试 ───────
`export_to_excel(test_data, test_file, table_style = style)` produced output.
── Failure ('test-data-export.R:74:5'): export_to_excel 不同样式组合测试 ───────
`export_to_excel(test_data, test_file, table_style = style)` produced output.
── Failure ('test-data-export.R:74:5'): export_to_excel 不同样式组合测试 ───────
`export_to_excel(test_data, test_file, table_style = style)` produced output.
── Failure ('test-data-export.R:74:5'): export_to_excel 不同样式组合测试 ───────
`export_to_excel(test_data, test_file, table_style = style)` produced output.
── Failure ('test-data-export.R:86:3'): export_to_excel 高级选项测试 ───────────
`export_to_excel(test_data, test_file, add_summary = TRUE)` produced output.
── Failure ('test-data-export.R:89:3'): export_to_excel 高级选项测试 ───────────
`export_to_excel(test_data, test_file, format_table = FALSE)` produced output.
── Failure ('test-data-export.R:92:3'): export_to_excel 高级选项测试 ───────────
`export_to_excel(...)` produced output.
── Failure ('test-data-export.R:107:3'): export_to_excel 目录创建测试 ──────────
`export_to_excel(test_data, test_file)` produced output.
── Failure ('test-data-export.R:122:3'): export_to_excel 错误处理测试 ──────────
`export_to_excel(mtcars, "/invalid/path/test.xlsx")` did not throw the expected error.
── Failure ('test-package-management.R:9:3'): install_if_missing 基本功能测试 ──
`install_if_missing(test_packages)` produced output.
── Error ('test-package-management.R:14:3'): install_if_missing 参数验证测试 ───
Error in `install_if_missing()`: Parameter 'packages' is required and cannot be empty
Backtrace:
    ▆
 1. ├─testthat::expect_error(install_if_missing(), "参数 'packages' 是必需的") at test-package-management.R:14:3
 2. │ └─testthat:::expect_condition_matching(...)
 3. │   └─testthat:::quasi_capture(...)
 4. │     ├─testthat (local) .capture(...)
 5. │     │ └─base::withCallingHandlers(...)
 6. │     └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
 7. └─MSCRUtils::install_if_missing()
── Error ('test-package-management.R:41:3'): load_packages 参数验证测试 ────────
Error in `load_packages()`: Parameter 'packages' is required and cannot be empty
Backtrace:
    ▆
 1. ├─testthat::expect_error(load_packages(), "参数 'packages' 是必需的") at test-package-management.R:41:3
 2. │ └─testthat:::expect_condition_matching(...)
 3. │   └─testthat:::quasi_capture(...)
 4. │     ├─testthat (local) .capture(...)
 5. │     │ └─base::withCallingHandlers(...)
 6. │     └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
 7. └─MSCRUtils::load_packages()
── Error ('test-package-management.R:84:3'): check_package_versions 参数验证测试 
Error in `check_package_versions()`: Parameter 'packages' is required and cannot be empty
Backtrace:
    ▆
 1. ├─testthat::expect_error(check_package_versions(), "参数 'packages' 是必需的") at test-package-management.R:84:3
 2. │ └─testthat:::expect_condition_matching(...)
 3. │   └─testthat:::quasi_capture(...)
 4. │     ├─testthat (local) .capture(...)
 5. │     │ └─base::withCallingHandlers(...)
 6. │     └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
 7. └─MSCRUtils::check_package_versions()

[ FAIL 20 | WARN 0 | SKIP 0 | PASS 14 ]
Error: Test failures
Execution halted

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/05_project_management.R
\name{init_r_project}
\alias{init_r_project}
\title{Initialize R Project for Data Analysis}
\usage{
init_r_project(
  rstudio = TRUE,
  git = FALSE,
  create_dirs = TRUE,
  create_standards = TRUE,
  create_gitignore = TRUE,
  standards_dir = "dev/design",
  overwrite = FALSE,
  quiet = FALSE,
  show_instructions = TRUE
)
}
\arguments{
\item{rstudio}{Logical, whether to create RStudio project file (default: TRUE)}

\item{git}{Logical, whether to initialize git repository (default: FALSE)}

\item{create_dirs}{Logical, whether to create standard directory structure (default: TRUE)}

\item{create_standards}{Logical, whether to create development standards documentation (default: TRUE)}

\item{create_gitignore}{Logical, whether to create .gitignore file (default: TRUE)}

\item{standards_dir}{Character string for standards documentation directory (default: "dev/design")}

\item{overwrite}{Logical, whether to overwrite existing files (default: FALSE)}

\item{quiet}{Logical, whether to suppress messages (default: FALSE)}

\item{show_instructions}{Logical, whether to show usage instructions (default: TRUE)}
}
\value{
List containing project initialization results
}
\description{
Creates a standardized R project structure in the current working directory.
This function is designed to be run when you're already in your project
directory (e.g., opened in RStudio or Cursor). It automatically sets up
a complete project structure including RStudio project file, standard
directories, development standards documentation, and version control
configuration.
}
\examples{
\dontrun{
# Quick setup with all defaults
init_r_project()

# Custom setup without git and standards
init_r_project(
  git = FALSE,
  create_standards = FALSE,
  quiet = TRUE
)

# Full setup with git initialization
init_r_project(
  git = TRUE,
  create_gitignore = TRUE,
  show_instructions = TRUE
)
}
}
